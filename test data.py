d = [1]
L = 3
m = [2, 10, 2, len(d)]
a = [0.9, 0.8, 0.95]
b = [1, 1, 1]
a1 = rede_neural(d, L, m, a, b)

a1.l[2].w[0] = [-2.33205369, 2.45680791, -0.22407937]

a1.l[1].w[0] = [-1.49493440e+00, -2.32416880e-01, -5.87499306e-01, 4.17826888e-01, 3.56303871e-01, 2.49442788e-01,
                -3.18530218e-01, -1.07021567e+00, 6.88542019e-01, -1.40070474e-03, -1.70689142e-01]
a1.l[1].w[1] = [8.74958254e-01, -2.99698904e-01, -7.84834473e-01, 5.13361761e-01, 5.21078295e-01, 8.12777254e-01,
                -7.82416017e-01, -6.19876604e-01, 8.73411758e-01, 3.65221814e-01, 5.39189035e-01]

a1.l[0].w[0] = [1.56261507e+00, 1.56103460e+00, -7.58151355e-04]
a1.l[0].w[1] = [5.42867867e-01, 9.35050173e-02, -2.04138311e-01]
a1.l[0].w[2] = [6.64150732e-01, 6.13455907e-01, -7.00122523e-01]
a1.l[0].w[3] = [-5.96336369e-01, -4.22248589e-01, 4.45514536e-01]
a1.l[0].w[4] = [-3.69211476e-01, -5.42903789e-01, 4.01523929e-01]
a1.l[0].w[5] = [-8.14849087e-01, -3.80015581e-01, 6.90638633e-01]
a1.l[0].w[6] = [5.87352620e-01, 5.08239470e-01, -6.21885368e-01]
a1.l[0].w[7] = [6.80829915e-01, 8.87315710e-01, -5.99872761e-01]
a1.l[0].w[8] = [-4.80243406e-01, -8.19766075e-01, 6.87996857e-01]
a1.l[0].w[9] = [-6.06771937e-02, -4.40994609e-01, 2.20027265e-01]
print(f'0 XOR 0 = {(a1.forward_propagation([0, 0]))}')
print(f'0 XOR 1 = {(a1.forward_propagation([0, 1]))}')
print(f'1 XOR 0 = {(a1.forward_propagation([1, 0]))}')
print(f'1 XOR 1 = {(a1.forward_propagation([1, 1]))}')

for n in range(0, n_inst):
    x1 = dataset.iloc[n, 1]
    x2 = dataset.iloc[n, 2]
    d = dataset.iloc[n, 0]
    plt.scatter(x1, x2, marker=f'${int(d)}$', s=200)
x_space = np.linspace(0, 1, 10)

for j in range(0, m[2]):
    bwl21 = a1.l[1].w[j][2]
    w1l21 = a1.l[1].w[j][0]
    w2l21 = a1.l[1].w[j][1]
    cy1 = (-bwl21 - w1l21 * x_space) / w2l21
    plt.plot(x_space, cy1)

plt.show()